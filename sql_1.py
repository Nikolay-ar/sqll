import sqlite3

# Если в текущей директории нет файла db.sqlite - 
# он будет создан; сразу же будет создано и соединение с базой.
# Если файл существует, функция connect просто подключится к базе.
con = sqlite3.connect('db.sqlite')

# Создаём специальный объект cursor для работы с БД.
# Вся дальнейшая работа будет вестись через методы этого объекта.
cur = con.cursor()

# Готовим SQL-запросы.
# Для читаемости кода запрос обрамлён в тройные кавычки и разбит построчно.
directors = [
    (1, 'Текс Эйвери', 1908),
    (2, 'Роберт Земекис', 1952),
    (3, 'Джерри Чиникей', 1912),
]
movies = [
    (1, 'Весёлые мелодии', 'Мультсериал', 1930),
    (2, 'Кто подставил кролика Роджера', 'Фильм', 1988),
    (3, 'Безумные Мелодии Луни Тюнз', 'Мультсериал', 1931),
    (4, 'Розовая пантера: Контроль за вредителями', 'Мультфильм', 1969),
    (5, 'Последний киногерой', 'Фильм', 1993),
    (6, 'Она написала убийство', 'Сериал', 1984),
    (7, 'Лас-Вегас', 'Сериал', 2003),
    (8, 'Паркер Льюис не проигрывает', 'Сериал', 1990),
    (9, 'Розовая пантера: Контроль за вредителями', 'Мультфильм', 1969),
    (10, 'Койот против Acme', 'Фильм', 2023)
]
gross = [
    (6565654,),
    (1116546565,),
    (88999,),
]
# cur.executemany('INSERT INTO directors VALUES(?, ?, ?);', directors)
# cur.executemany('INSERT INTO movies VALUES(?, ?, ?, ?);', movies)
cur.execute('UPDATE movies SET gross = 123552 WHERE id = 4;')
# Применяем запросы.
# Запросы, переданные в cur.execute(), не будут выполнены до тех пор,
# пока не вызван метод commit().
con.commit()
# Закрываем соединение с БД.
con.close()